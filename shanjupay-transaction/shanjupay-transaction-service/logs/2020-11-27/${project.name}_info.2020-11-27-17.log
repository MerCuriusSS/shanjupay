[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:55:20,428 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [transaction.PlatformPayChannelTest], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:55:20,455 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [transaction.PlatformPayChannelTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:55:20,457 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [transaction.PlatformPayChannelTest]: PlatformPayChannelTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:56:27,549 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [transaction.PlatformPayChannelTest], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:56:27,585 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [transaction.PlatformPayChannelTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:56:27,587 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [transaction.PlatformPayChannelTest]: PlatformPayChannelTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:35,235 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [transaction.PlatformPayChannelTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:35,707 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:35,751 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1de24cc, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1c7df28, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@f842ca, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1c81773, org.springframework.test.context.support.DirtiesContextTestExecutionListener@114b6c2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@990ed7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5fddc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1df00a0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@115107f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@14c50bc, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@84a914, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@10378a4]
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:36,421 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:36,433 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:36,444 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22240, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=90000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20890, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:37,316 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a13e6858] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:37,460 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:37,603 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22240, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=90000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20890, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:37,965 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:37,979 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:37,994 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:38,007 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:38,009 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:38,072 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:39,969 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:39,973 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,021 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,023 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,023 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,024 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,024 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,024 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,024 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,025 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,466 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,605 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,605 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,703 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,703 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\12345678\Desktop\MecuriusWorkSpace\laptop\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,709 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:40,709 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,003 INFO [main][GenericScope.java:294] - BeanFactory id=0994b21a-f9ca-3bea-9e1b-3745e1db771c
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,380 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8524655b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,646 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$8e5b45f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,682 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,715 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,746 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,758 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,760 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,761 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$7b2550d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,773 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$dcf5931] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,785 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,793 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,806 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$ce1492eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,826 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$c1df9bb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,859 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$4cd22edf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,881 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,887 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,950 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:41,966 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,015 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,022 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$9a432bb9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,066 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,075 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,086 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,095 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,336 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,337 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,401 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,442 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,452 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$d265f78f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,468 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,480 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$c3bf38f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,498 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$e0b7e4ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,515 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$9304a705] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,528 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$4e1b8cf4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,540 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,551 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,577 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$74e70422] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,606 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,621 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$c2c3827b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,649 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,657 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,710 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,742 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,756 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$9f5830ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,779 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,788 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,805 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,824 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,826 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,867 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,881 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,886 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,892 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:42,913 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a13e6858] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:44,897 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:45,187 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:46,119 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:47,699 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:48,241 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:48,241 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:48,259 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:48,260 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:48,645 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:49,495 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:49,599 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:49,616 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:49,654 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:51,499 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-application] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:51,548 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:51,548 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:51,576 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:51,587 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:51,594 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-application , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:51,626 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:51,712 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:51,781 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:51,829 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,051 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,052 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,053 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,054 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=1396&qos.enable=false&qos.port=22240&registry=spring-cloud&release=2.7.3&timestamp=1606471191831, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,120 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,670 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20890, export /192.168.0.104:20890, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,673 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,675 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,691 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,726 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,729 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,729 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.transaction.api.PayChannelService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,730 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.transaction.api.PayChannelService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,732 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,733 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=1396&qos.enable=false&qos.port=22240&registry=nacos&release=2.7.3&timestamp=1606471191838, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,742 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\12345678\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.0.104:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=14288&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1606464351988&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,743 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,766 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,798 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,799 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:52,810 INFO [main][StartupInfoLogger.java:59] - Started PlatformPayChannelTest in 16.92 seconds (JVM running for 19.899)
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,574 INFO [Thread-11][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,575 INFO [Thread-11][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=1396&qos.enable=false&qos.port=22240&release=2.7.3&timestamp=1606471191838], dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,575 INFO [Thread-11][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=1396&qos.enable=false&qos.port=22240&release=2.7.3&timestamp=1606471191838, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,576 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,585 INFO [Thread-11][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,586 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,586 INFO [Thread-11][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,586 INFO [Thread-11][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /192.168.0.104:20890, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,588 INFO [Thread-11][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20890, export /192.168.0.104:20890, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,591 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,594 INFO [Thread-11][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,596 INFO [Thread-11][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,597 INFO [Thread-11][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,598 INFO [Thread-11][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.0.104:20890/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.0.104&bind.port=20890&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=1396&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1606471191841, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,599 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,611 INFO [Thread-11][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,615 INFO [Thread-11][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,621 INFO [Thread-11][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,626 INFO [Thread-11][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2020-11-27 17:59:53,627 INFO [Thread-11][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
