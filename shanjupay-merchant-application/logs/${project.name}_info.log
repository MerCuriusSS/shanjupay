[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:07,634 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.merchant.RestTemplateTest], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:07,684 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.merchant.RestTemplateTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:07,688 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.merchant.RestTemplateTest]: RestTemplateTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:07,981 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.merchant.MerchantApplicationBootstrap for test class com.shanjupay.merchant.RestTemplateTest
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:08,388 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:08,483 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@bdbc74, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@591ac8, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7fe64f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@145825, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1330d4f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@166c0fb, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@e1046, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@c1b2d2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1c19a70, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@8dec2b]
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:12,665 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:12,675 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:12,688 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:14,645 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c81416ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:14,862 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:15,036 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:15,562 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:15,580 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'merchant-application.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:15,582 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='merchant-application.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:15,701 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,065 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,073 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,106 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,108 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,109 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,109 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,110 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,110 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,110 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,111 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,694 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,862 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,863 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,907 WARN [main][ServiceAnnotationBeanPostProcessor.java:169] -  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,910 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:18,911 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:19,230 INFO [main][GenericScope.java:294] - BeanFactory id=6a05e924-498d-3e47-af88-333aaf8fdeed
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,011 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$2fbb62f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,051 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,092 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,129 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,143 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,145 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,147 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$a1faff6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,173 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$34a507c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,218 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,253 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,304 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$f4ea417d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,332 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e8b54a42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,410 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$73a7dd71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,430 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,438 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,530 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,544 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,632 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,642 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$c118da4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,821 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,834 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,863 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:20,884 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,259 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,260 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,320 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,377 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,394 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$f93ba621] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,422 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,452 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$3311a221] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,481 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$78d937e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,519 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$b9da5597] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,539 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$74f13b86] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,551 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,565 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,591 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$9bbcb2b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,623 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,638 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e999310d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,668 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,680 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,783 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,817 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,842 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$c62ddf81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,865 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,873 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,896 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,918 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,920 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,965 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,981 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,985 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:21,991 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:22,029 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c81416ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:23,207 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:23,405 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:23,479 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:23,758 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:23,916 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:23,920 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,026 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,027 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,029 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,143 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.0.104/MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=MerchantService&lazy=false&methods=queryMerchantById&pid=25596&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1606097843758, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,167 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.0.104/MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=MerchantService&lazy=false&methods=queryMerchantById&pid=25596&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1606097843758, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,170 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.0.104/MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,170 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : MerchantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,171 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,240 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,242 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : MerchantService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,269 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\12345678\.dubbo\dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {MerchantService=dubbo://192.168.0.104:20890/MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=MerchantService&methods=queryMerchantById&path=MerchantService&pid=139552&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1605866367707, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.0.104:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=139552&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1605866368014&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,271 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.0.104/MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=MerchantService&lazy=false&methods=queryMerchantById&pid=25596&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1606097843758, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,306 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.0.104/MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=MerchantService&lazy=false&methods=queryMerchantById&pid=25596&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1606097843758, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,323 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.0.104/MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=MerchantService&lazy=false&methods=queryMerchantById&pid=25596&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1606097843758, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,328 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.0.104/MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=MerchantService&lazy=false&methods=queryMerchantById&pid=25596&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1606097843758, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:24,334 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service MerchantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=MerchantService&lazy=false&methods=queryMerchantById&pid=25596&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.merchant.api.MerchantService%26lazy%3Dfalse%26methods%3DqueryMerchantById%26pid%3D25596%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.0.104%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1606097843758&register.ip=192.168.0.104&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1606097843758, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:27,412 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:27,983 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:29,279 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:29,280 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:29,302 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:29,304 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:29,858 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:30,802 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:30,855 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:32,255 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:32,289 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:32,300 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:32,303 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-service , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:32,305 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.0.104/MerchantService] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:32,305 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : MerchantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:32,305 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : MerchantService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:32,348 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:32,460 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:33,049 INFO [main][StartupInfoLogger.java:59] - Started RestTemplateTest in 24.336 seconds (JVM running for 28.701)
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,480 INFO [main][RestTemplateTest.java:54] - 请求验证码服务，得到响应:{"body":{"code":0,"msg":"","result":{"key":"sms:7d667db2ce35452284336ec1d8b46ec9"}},"headers":{"Date":["Mon, 23 Nov 2020 02:17:34 GMT"],"Content-Type":["application/json;charset=UTF-8"],"Transfer-Encoding":["chunked"]},"statusCode":"OK","statusCodeValue":200}
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,499 INFO [Thread-9][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,500 INFO [Thread-9][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=25596&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1606097843911], dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,507 INFO [Thread-9][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=25596&qos.enable=false&qos.port=22310&release=2.7.3&timestamp=1606097843911, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,508 INFO [Thread-9][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.0.104/MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=MerchantService&lazy=false&methods=queryMerchantById&pid=25596&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1606097843758, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,518 INFO [Thread-9][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.0.104/MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=MerchantService&lazy=false&methods=queryMerchantById&pid=25596&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1606097843758, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,519 INFO [Thread-9][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.0.104/MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=MerchantService&lazy=false&methods=queryMerchantById&pid=25596&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1606097843758, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,519 INFO [Thread-9][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.0.104/MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=MerchantService&lazy=false&methods=queryMerchantById&pid=25596&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1606097843758, dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,528 INFO [Thread-9][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.0.104
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,535 INFO [Thread-9][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,543 INFO [Thread-9][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,544 INFO [Thread-9][AnnotationInjectedBeanPostProcessor.java:293] - org.apache.dubbo.common.bytecode.proxy0@ae71e1 was destroying!
[${project.name}][${env:SERVER_PORT}] 2020-11-23 10:17:34,544 INFO [Thread-9][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
